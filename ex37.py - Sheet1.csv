Label,Keyword,Description,Example
Keywords,and,Logical and.,True and False == False
Keywords,as,Part of the with-as statement.,with X as Y: pass
Keywords,assert,Assert (ensure) that something is true.,"assert False, ""Error!"""
Keywords,break,Stop this loop right now.,while True: break
Keywords,class,Define a class.,class Person(object)
Keywords,continue,"Don't process more of the loop, do it again.",while True: continue
Keywords,def,Define a function.,def X(): pass
Keywords,del,Delete from dictionary.,del X[Y]
Keywords,elif,Else if condition.,if: X; elif: Y; else: J
Keywords,else,Else condition.,if: X; elif: Y; else: J
Keywords,except,"If an exception happens, do this.",except ValueError as e: print(e)
Keywords,exec,Run a string as Python.,"exec 'print(""hello"")'"
Keywords,finally,"Exceptions or not, finally do this no matter what.",finally: pass
Keywords,for,Loop over a collection of things.,for X in Y: pass
Keywords,from,Importing specific parts of a module.,from x import Y
Keywords,global,Declare that you want a global variable.,global X
Keywords,if,If condition.,if: X; elif: Y; else: J
Keywords,import,Import a module into this one to use.,import os
Keywords,in,Part of for-loops. Also a test of X in Y.,"for X in Y: pass 
1 in [1] == True"
Keywords,is,Like == to test equality.,1 is 1 == True
Keywords,lambda,Create a short anonymous function.,s = lambda y: y ** y; s(3)
Keywords,not,Logical not.,not True == False
Keywords,or,Logical or.,True or False == True
Keywords,pass,This block is empty.,def empty(): pass
Keywords,print,Print this string.,print('this string')
Keywords,raise,Raise an exception when things go wrong.,"raise ValueError(""No"")"
Keywords,return,Exit the function with a return value.,def X(): return Y
Keywords,try,"Try this block, and if exception, go to except.",try: pass
Keywords,while,While loop.,while X: pass
Keywords,with,With an expression as a variable do.,with X as Y: pass
Keywords,yield,Pause here and return to caller.,def X(): yield Y; X().next()
"Data Types: For data types, write out what makes up each one. For example, with strings, write out how you create a string. For numbers, write out a few numbers.

",Type,Description,Example
Data Types,TRUE,True boolean value.,True or False == True
Data Types,FALSE,False boolean value.,False and True == False
Data Types,None,"Represents ""nothing"" or ""no value"".",x = None
Data Types,bytes,"Stores bytes, maybe of text, PNG, file, etc.","x = b""hello"""
Data Types,strings,Stores textual information.,"x = ""hello"""
Data Types,numbers,Stores integers.,i = 100
Data Types,floats,Stores decimals.,i = 10.389
Data Types,lists,Stores a list of things.,"j = [1,2,3,4]"
Data Types,dicts,Stores a key=value mapping of things.,"e = {'x': 1, 'y': 2}"
"String Escape Sequences: For string escape sequences, use them in strings to make sure they do what you think they do.",Escape,Description,
String Escape Sequences,\\,Backslash,
String Escape Sequences,\',Single-quote,
String Escape Sequences,"\""",Double-quote,
String Escape Sequences,\a,Bell,
String Escape Sequences,\b,Backspace,
String Escape Sequences,\f,Formfeed,
String Escape Sequences,\n,Newline,
String Escape Sequences,\r,Carriage,
String Escape Sequences,\t,Tab,
String Escape Sequences,\v,Vertical tab,
Old Style String Formats: Same thing for string formats: use them in some strings to know what they do.,Escape,Description,Example
Old Style String Formats,%d,Decimal integers (not floating point).,%d % 45 == '45'
Old Style String Formats,%i,Same as %d.,%i % 45 == '45'
Old Style String Formats,%o,Octal number.,%o % 1000 == '1750'
Old Style String Formats,%u,Unsigned decimal.,%u % -1000 == '-1000'
Old Style String Formats,%x,Hexadecimal lowercase.,%x % 1000 == '3e8'
Old Style String Formats,%X,Hexadecimal uppercase.,%X % 1000 == '3E8'
Old Style String Formats,%e,"Exponential notation, lowercase 'e'.",%e % 1000 == '1.000000e+03'
Old Style String Formats,%E,"Exponential notation, uppercase 'E'.",%E % 1000 == '1.000000E+03'
Old Style String Formats,%f,Floating point real number.,%f % 10.34 == '10.340000'
Old Style String Formats,%F,Same as %f.,%F % 10.34 == '10.340000'
Old Style String Formats,%g,"Either %f or %e, whichever is shorter.",%g % 10.34 == '10.34'
Old Style String Formats,%G,Same as %g but uppercase.,%G % 10.34 == '10.34'
Old Style String Formats,%c,Character format.,"%c % 34 == '""'"
Old Style String Formats,%r,Repr format (debugging format).,"%r % int == ""<type 'int'>"""
Old Style String Formats,%s,String format.,%s there % 'hi' == 'hi there'
Old Style String Formats,%%,A percent sign.,%g%% % 10.34 == '10.34%'
"Operators: Some of these may be unfamiliar to you, but look them up anyway. Find out what they do, and if you still can't figure it out, save it for later.",Operator,Description,Example
Operators,=+,Addition,2 + 4 == 6
Operators,-,Subtraction,2 - 4 == -2
Operators,*,Multiplication,2 * 4 == 8
Operators,**,Power of,2 ** 4 == 16
Operators,/,Division,2 / 4 == 0.5
Operators,//,Floor division,2 // 4 == 0
Operators,%,String interpolate or modulus,2 % 4 == 2
Operators,<,Less than,4 < 4 == False
Operators,>,Greater than,4 > 4 == False
Operators,<=,Less than equal,4 <= 4 == True
Operators,>=,Greater than equal,4 >= 4 == True
Operators,==,Equal,4 == 5 == False
Operators,!=,Not equal,4 != 5 == True
Operators,( ),Parenthesis,len('hi') == 2
Operators,[ ],List brackets,"[1,3,4]"
Operators,{ },Dict curly braces,"{'x': 5, 'y': 10}"
Operators,@,At (decorators),@classmethod
Operators,",",Comma,"range(0, 10)"
Operators,:,Colon,def X():
Operators,.,Dot,self.x = 10
Operators,=,Assign equal,x = 10
Operators,;,semi-colon,"print(""hi""); print(""there"")"
Operators,=+=,Add and assign,x = 1; x += 2
Operators,-=,Subtract and assign,x = 1; x -= 2
Operators,*=,Multiply and assign,x = 1; x *= 2
Operators,/=,Divide and assign,x = 1; x /= 2
Operators,//=,Floor divide and assign,x = 1; x //= 2
Operators,%=,Modulus assign,x = 1; x %= 2
Operators,**=,Power assign,x = 1; x **= 2